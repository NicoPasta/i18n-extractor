{"version":3,"file":"index.cjs","mappings":"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","sources":["webpack://vue3-i18n-extractor/external node-commonjs \"path\"","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"fs-extra\"}","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"glob\"}","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"commander\"}","webpack://vue3-i18n-extractor/./src/util.js","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"@babel/generator\"}","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"@babel/traverse\"}","webpack://vue3-i18n-extractor/external node-commonjs \"node:crypto\"","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"@babel/parser\"}","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"@vue/compiler-sfc\"}","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"@babel/template\"}","webpack://vue3-i18n-extractor/./src/parser.js","webpack://vue3-i18n-extractor/./src/constants.js","webpack://vue3-i18n-extractor/external commonjs {\"commonjs\":\"prettier\"}","webpack://vue3-i18n-extractor/external node-commonjs \"node:url\"","webpack://vue3-i18n-extractor/external node-commonjs \"node:path\"","webpack://vue3-i18n-extractor/./src/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs-extra\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"glob\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"commander\");","export const hasCN = (str) => {\n  return str && /[\\u4e00-\\u9fa5]+/gmu.test(str);\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/generator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/traverse\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:crypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/parser\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@vue/compiler-sfc\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/template\");","import { hasCN } from './util.js';\nimport generator from '@babel/generator';\nimport babelTraverse from '@babel/traverse';\nimport { createHash } from 'node:crypto';\nimport { parse as babelParser } from '@babel/parser';\nimport { parse as vueParser } from '@vue/compiler-sfc';\nimport babeltemplate from '@babel/template';\nimport path from 'path';\nimport {\n  FileType as supportedFileType,\n  NodeTypes,\n  selfClosingTags,\n} from './constants.js';\nimport prettier from 'prettier';\nimport { glob } from 'glob';\n\nlet _importName, _importPath, _locales, _fileType;\nconst babelGenerator = generator.default;\nconst template = babeltemplate.default;\n\nlet stop;\n//入口函数\nexport const parse = async (\n  code,\n  locales,\n  // i18n名字\n  importName,\n  // i18n路径\n  importPath,\n  filename\n) => {\n  // 初始化内部变量\n  _importName = importName;\n  _importPath = importPath;\n  _locales = locales;\n\n  let result = '';\n  _fileType = path.extname(filename);\n\n  if (!Object.values(supportedFileType).includes(_fileType)) {\n    console.warn('unsupported filedtype: ' + _fileType);\n    return {};\n  }\n\n  // 检测代码字符串中没有中文字符\n  if (!hasCN(code)) {\n    console.warn('no chinese character in ' + filename);\n    return {};\n  }\n\n  // JS类型，直接交给babel\n  if (_fileType === supportedFileType.JS) {\n    const jsAst = transformJS(code, false, true);\n    // 如果使用了魔法注释，那么跳过提取\n    if (stop) {\n      stop = false;\n      return { result, skip: true };\n    }\n    // 使用修改后的AST生成code\n    result = babelGenerator(jsAst).code;\n\n    return { result, skip: false };\n  } else {\n    let sfcDescriptor;\n    sfcDescriptor = vueParser(code).descriptor;\n    const templateAst = sfcDescriptor.template.ast;\n    const scriptSetup = sfcDescriptor.scriptSetup?.content;\n    const script = sfcDescriptor.script?.content;\n    sfcDescriptor.template.content = generateTemplate({\n      ...transformTemplate(templateAst),\n      // 生成template内部的字符串，因此不要带template标签\n      tag: '',\n    });\n    // script和scriptSetup的部分交给babel处理\n    if (script)\n      sfcDescriptor.script.content = babelGenerator(\n        transformJS(script, false, false)\n      ).code;\n    if (scriptSetup)\n      sfcDescriptor.scriptSetup.content = babelGenerator(\n        transformJS(scriptSetup, false, true)\n      ).code;\n    // 生成sfc\n    result = await generateSfc(sfcDescriptor);\n\n    return { result, skip: false };\n  }\n};\n\nfunction transformTemplate(ast) {\n  if (ast.props.length) {\n    // props中有两种有中文字符的可能，指令绑定中的experssion和普通属性绑定中的字符串\n    ast.props = ast.props.map((prop) => {\n      // 指令\n      if (prop.type === NodeTypes.DIRECTIVE && prop?.exp?.content) {\n        const l = prop.exp.content.length;\n        // 指令内容为单引号字符串导致无法读取ast，将单引号替换为模版字符串引号\n        if (prop.exp.content[0] === \"'\" && prop.exp.content[l - 1] === \"'\") {\n          prop.exp.content = `\\`${prop.exp.content.slice(1, l - 1)}\\``;\n        }\n\n        let jsCode;\n        // 去掉空格和换行\n        let c = prop.exp.content.replace(/[\\n]/g, '');\n\n        //  babel会把{}识别为块作用域,所以要处理一下，拼接一个括号，让babel认为是一个表达式\n        if (/^\\{.*\\}$/.test(c)) {\n          c = `(${c})`;\n        }\n        jsCode = generateDirectiveCode(transformJS(c, true, false));\n        // 去掉括号\n        if (jsCode.startsWith('(') && jsCode.endsWith(')')) {\n          jsCode = jsCode.replace(/^\\(|\\)$/g, '');\n        }\n\n        prop.exp.content = jsCode;\n        const splitPoint = prop.loc.source.indexOf('=');\n        const attr = prop.loc.source.substring(0, splitPoint);\n        // 把指令拼回去\n        prop.loc.source = attr + `=\"${jsCode}\"`;\n        return prop;\n      }\n\n      // 普通属性 替换为v-bind\n      if (prop.type === NodeTypes.ATTRIBUTE && prop?.loc?.source) {\n        if (hasCN(prop?.loc?.source)) {\n          const localeKey = saveLocale(prop.value.content);\n          return {\n            name: 'bind',\n            type: NodeTypes.DIRECTIVE,\n            loc: {\n              source: `:${prop.name}=\"$t('${localeKey}')\"`,\n            },\n          };\n        }\n      }\n\n      return prop;\n    });\n  }\n\n  if (ast.children.length) {\n    ast.children = ast.children.map((child) => {\n      if (child.type === NodeTypes.TEXT && hasCN(child.content)) {\n        const localeKey = saveLocale(child.content);\n        return {\n          type: NodeTypes.INTERPOLATION,\n          loc: {\n            source: `{{ $t('${localeKey}') }}`,\n          },\n        };\n      }\n\n      // 插值语法，插值语法的内容包含在child.content内部，如果匹配到中文字符，则进行JS表达式解析并替换\n      if (\n        child.type === NodeTypes.INTERPOLATION &&\n        hasCN(child.content?.content)\n      ) {\n        // 去掉空格和换行\n        const c = child.content?.content.replace(/[\\n]/g, '');\n        const jsCode = generateDirectiveCode(\n          // child.content?.content是js表达式\n          transformJS(c, true, false)\n        );\n        return {\n          type: NodeTypes.INTERPOLATION,\n          loc: {\n            source: `{{ ${jsCode} }}`,\n          },\n        };\n      }\n\n      // 元素\n      // 递归处理\n      if (child.type === NodeTypes.ELEMENT) {\n        return transformTemplate(child);\n      }\n\n      return child;\n    });\n  }\n\n  return ast;\n}\n\nconst transformJS = (code, isInTemplate = false, isSetup = false) => {\n  const ast = babelParser(code, {\n    sourceType: 'unambiguous',\n  });\n  let shouldImport = false;\n  const visitor = {\n    Program: {\n      enter(path) {\n        path.container.comments.forEach((v) => {\n          // 使用了魔法注释\n          if (v.value.includes('i18n-disable')) {\n            stop = true;\n          }\n        });\n        if (stop) {\n          // 停止遍历AST\n          path.stop();\n        }\n        path.traverse({\n          'StringLiteral|TemplateLiteral'(path) {\n            //   导入导出的路径对应的字符串不变\n            if (path.findParent((p) => p.isImportDeclaration())) {\n              path.node.skipTransform = true;\n            }\n          },\n        });\n      },\n      exit(path) {\n        // 模版js不需要导入i8n\n        if (isInTemplate) return;\n        path.traverse({\n          ImportDeclaration(p) {\n            const source = p.node.source.value;\n            // 说明已经有导入声明了\n            if (source === _importName) {\n              shouldImport = false;\n            }\n          },\n        });\n        if (shouldImport) {\n          // 导入_importName\n          const importAst = template.ast(\n            `import ${_importName} from '${_importPath}'`\n          );\n          // 如果应该新增加对i18n的导入，那么在body中加入一条import语句\n          path.node.body.unshift(importAst);\n        }\n      },\n    },\n    StringLiteral(path) {\n      if (path.node.skipTransform || !hasCN(path.node.value)) {\n        return;\n      }\n      shouldImport = true;\n      let replaceExpression = getReplaceExpression(path, isInTemplate, isSetup);\n\n      path.replaceWith(replaceExpression);\n      path.skip();\n    },\n    TemplateLiteral(path) {\n      if (path.node.skipTransform) {\n        return;\n      }\n      const qua = path.get('quasis');\n      const includeCNCharacter = qua.some((v) => {\n        const a = hasCN(v.node.value.raw);\n        return a;\n      });\n      if (!includeCNCharacter) return;\n\n      shouldImport = true;\n\n      let replaceExpression;\n\n      replaceExpression = getReplaceExpression(path, isInTemplate, isSetup);\n\n      path.replaceWith(replaceExpression);\n      path.skip();\n    },\n  };\n\n  babelTraverse.default(ast, visitor);\n  return ast;\n};\n\n// 去掉babel附带的”;“\nfunction generateDirectiveCode(ast) {\n  return babelGenerator(ast, {\n    compact: false,\n    jsescOption: {\n      quotes: 'single',\n    },\n  }).code.replace(/;/gm, '');\n}\n\nfunction getReplaceExpression(path, isInTemplate, isSetup) {\n  let value, expressionParams;\n  if (path.isTemplateLiteral()) {\n    expressionParams = path.node.expressions.map(\n      (item) => babelGenerator(item).code\n    );\n    value = path\n      .get('quasis')\n      .map((item) => item.node.value.raw)\n      .reduce((prev, cur, index) => {\n        // 创建placeholder\n        return prev + `{${index - 1}}` + cur;\n      });\n  } else {\n    value = path.node.value;\n  }\n\n  const key = saveLocale(value);\n\n  let replacement;\n  // this.$t，对应组件选项对象\n  if (!isSetup && !isInTemplate) {\n    replacement = template.ast(\n      `this.$t('${key}'${\n        // 传递expressionParams\n        expressionParams?.length\n          ? ',' + '[' + expressionParams.join(',') + ']'\n          : ''\n      })`\n    ).expression;\n  } else {\n    // 模版或者js，也包括setup\n    replacement = template.ast(\n      `${isInTemplate ? '$t' : _importName + '.global.t'}('${key}'${\n        // 传递expressionParams\n        expressionParams?.length\n          ? ',' + '[' + expressionParams.join(',') + ']'\n          : ''\n      })`\n    ).expression;\n  }\n\n  return replacement;\n}\n\n// 保存提取出的中文字符，用md5做key\nfunction saveLocale(str) {\n  const locale = str.trim();\n  const key = generateHash(str);\n  _locales[key] = locale;\n  return key;\n}\n\nfunction generateElementAttr(attrs) {\n  return attrs.map((attr) => attr?.loc?.source).join(' ');\n}\n\nfunction generateElement(node, children) {\n  let attributes = '';\n  if (node.props.length) {\n    // 注意要留出来一个空格\n    attributes = ` ${generateElementAttr(node.props)}`;\n  }\n  // 自闭合标签\n  if (node.tag) {\n    if (node.isSelfClosing || selfClosingTags.includes(node.tag)) {\n      return `<${node.tag}${attributes} />`;\n    }\n\n    return `<${node.tag}${attributes}>${children}</${node.tag}>`;\n  }\n\n  return children;\n}\n\nfunction generateTemplate(templateAst, children = '') {\n  // 先处理children\n  if (templateAst?.children?.length) {\n    children = templateAst.children.reduce(\n      (result, child) => result + generateTemplate(child),\n      ''\n    );\n  }\n\n  // 根据children拼成模版\n  if (templateAst.type === 1) {\n    return generateElement(templateAst, children);\n  }\n  // 递归的结束条件，文本或者插值，不再有children\n  return templateAst.loc.source;\n}\n// function generateElement(node, childStr) {\n//   // 非元素\n//   if (node.type !== NodeTypes.ELEMENT) {\n//     return node.loc.source;\n//   }\n\n//   let attr = ' ';\n//   if (node.props?.length) {\n//     attr += generateElementAttr(node.props);\n//   }\n\n//   if (node.tag) {\n//     if (node.isSelfClosing || selfClosingTags.includes(node.tag)) {\n//       return `<${node.tag}${attr} />`;\n//     }\n//     return `<${node.tag}${attr}>${childStr}</${node.tag}>`;\n//   }\n//   // 最外层节点\n//   return childStr;\n// }\n// function generateTemplate(ast) {\n//   let childStr = '';\n//   if (ast.children?.length) {\n//     childStr = ast.children.map((v) => generateTemplate(v)).join('');\n//   }\n\n//   return generateElement(ast, childStr);\n// }\n\n// 用每个模块的tag，attr，content， 拼接出整个.vue文件\nasync function generateSfc(descriptor) {\n  let result = '';\n  const { template, script, scriptSetup, styles, customBlocks } = descriptor;\n  [template, script, scriptSetup, ...styles, ...customBlocks].forEach(\n    (block) => {\n      if (block?.type) {\n        result += `<${block.type}${Object.entries(block.attrs).reduce(\n          (attrCode, [attrName, attrValue]) => {\n            // 没有值的attr\n            if (attrValue === true) {\n              attrCode += ` ${attrName}`;\n            } else {\n              attrCode += ` ${attrName}=\"${attrValue}\"`;\n            }\n\n            return attrCode;\n          },\n          // 初始值为空格，与type隔开\n          ' '\n        )}>${block.content}</${block.type}>`;\n      }\n    }\n  );\n\n  // 读取本地的prettier文件，对代码进行格式化\n  const file = glob.sync('**/.prettierrc.*');\n  const parser = _fileType.slice(1) === 'js' ? 'babel' : 'vue';\n  if (file.length) {\n    let prettierConfigpath = path.resolve(process.cwd(), file[0]);\n    const options = await prettier.resolveConfig(prettierConfigpath);\n    // 根据fileType确定如何格式化\n    options.parser = parser;\n    return prettier.format(result, options);\n  } else {\n    return prettier.format(result, {\n      parser: parser,\n      semi: true,\n      singleQuote: true,\n    });\n  }\n}\n\nexport function generateHash(str) {\n  // 文字内容去重\n  const hash = createHash('md5');\n  hash.update(str);\n  return hash.digest('hex').slice();\n}\n","export const FileType = {\n  JS: '.js',\n  VUE: '.vue',\n};\n\n/**\n * vue Template ast节点类型\n */\nexport const NodeTypes = {\n  ROOT: 0,\n  ELEMENT: 1,\n  TEXT: 2,\n  COMMENT: 3,\n  SIMPLE_EXPRESSION: 4,\n  INTERPOLATION: 5,\n  ATTRIBUTE: 6,\n  DIRECTIVE: 7,\n  COMPOUND_EXPRESSION: 8,\n  IF: 9,\n  IF_BRANCH: 10,\n  FOR: 11,\n  TEXT_CALL: 12,\n  VNODE_CALL: 13,\n};\n\nexport const selfClosingTags = [\n  'area',\n  'base',\n  'br',\n  'col',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr',\n];\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"prettier\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:path\");","import path from 'path';\nimport fse from 'fs-extra';\nimport { glob } from 'glob';\nimport { Command } from 'commander';\nimport { parse } from './parser.js';\nimport { fileURLToPath } from 'node:url';\nimport { dirname } from 'node:path';\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\n(() => {\n  let options = {\n    pattern: '**/*.{vue.js}',\n    // pattern: path.resolve(__dirname, './vuetest/*.{vue,js}'),\n    ignore: ['node_modules/**'],\n    importPath: null,\n    importName: null,\n    outputPath: null,\n    outputFileName: 'zh-CN.json',\n  };\n\n  try {\n    const localPackageJson = fse.readFileSync(\n      path.resolve(process.cwd(), 'package.json'),\n      'utf8'\n    );\n    // 读取package.json中的配置\n    const packageParse = JSON.parse(localPackageJson);\n    if (packageParse?.i18nExtractOptions) {\n      Object.assign(options, packageParse.i18nExtractOptions);\n    }\n  } catch (err) {\n    console.error(err);\n    return;\n  }\n  const command = new Command();\n\n  // 通过命令配置\n  command\n    .name('i18n-vue-extractor')\n    .option('-p --importPath <path>', \"imported variable's filepath\")\n    .option('-n --importName <name>', \"imported variable's name\")\n    .option('-o --outputPath <outputPath>', 'output file path')\n    .option('-o --outputFileName <outputname>', 'output file name')\n    .option('-ptn --pattern <pattern>', 'file path pattern')\n    .option('-i --ignore <ignore>', 'ignore file path')\n    .action((name, inputOptions, command) => {\n      Object.keys(inputOptions._optionValues).forEach((opt) => {\n        options[opt] = inputOptions._optionValues[opt];\n      });\n    })\n    .parse(process.argv);\n\n  // 这三个参数时必须的\n  if (!options.importPath || !options.importName || !options.outputPath) {\n    console.error(\n      'Please set importName, importPath and outputPath, they are required'\n    );\n    return;\n  }\n\n  let locales = {};\n  const files = glob.sync(options.pattern, { ignore: options.ignore });\n  const outputPath = path.resolve(process.cwd(), options.outputPath);\n  // 匹配到原本的文件名，手动拼接文件类型\n  const filename = options.outputFileName.split(/\\.[^.]+$/)[0] + '.json';\n  // 取到原本输出目录下就有的JSON文件做一个初始值\n  if (fse.existsSync(outputPath)) {\n    // 读取文件\n    try {\n      const content = fse.readFileSync(outputPath + '/' + filename, 'utf8');\n      if (content) {\n        locales = JSON.parse(content);\n      }\n    } catch (e) {}\n  } else {\n    console.error(\"outputPath doesn't exists\");\n    return;\n  }\n\n  files.forEach(async (filename) => {\n    const filePath = path.resolve(process.cwd(), filename);\n    console.info(`detecting file: ${filePath}`);\n    const sourceCode = fse.readFileSync(filePath, 'utf8');\n    try {\n      const res = await parse(\n        sourceCode,\n        locales,\n        options.importName,\n        options.importPath,\n        filename\n      );\n\n      const { result = '', skip = false } = res;\n      if (skip) {\n        console.info(`skiped: ${filePath}`);\n        return;\n      }\n\n      if (result) {\n        fse.writeFileSync(filePath, result, 'utf8');\n      }\n    } catch (err) {\n      console.error(`error in ${filename}:`);\n      console.log(err);\n    }\n  });\n\n  // 都是相对于当前工作目录（cwd）\n  if (Object.keys(locales).length) {\n    fse.ensureDirSync(options.outputPath);\n    fse.writeFileSync(\n      path.join(options.outputPath, 'zh_CN.json'),\n      JSON.stringify(locales, null, '\\t'),\n      'utf8'\n    );\n    console.log('extract success');\n  } else {\n    console.warn('no chinese characters found');\n  }\n})();\n"],"names":["require","hasCN","str","test","_importName","_importPath","_locales","_fileType","FileType","JS","VUE","NodeTypes","selfClosingTags","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","f","Error","s","done","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","obj","key","input","hint","prim","toPrimitive","undefined","String","Number","res","getOwnPropertyDescriptors","defineProperties","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","err","babelGenerator","generator","template","babeltemplate","parse","_ref","_callee","code","locales","importName","importPath","filename","result","jsAst","sfcDescriptor","templateAst","scriptSetup","script","_context","path","supportedFileType","includes","console","warn","transformJS","skip","vueParser","descriptor","ast","_sfcDescriptor$script","content","_sfcDescriptor$script2","generateTemplate","_templateAst$children","children","reduce","child","generateElement","loc","source","transformTemplate","props","map","prop","_prop$loc2","localeKey","_prop$exp","exp","concat","replace","jsCode","generateDirectiveCode","startsWith","endsWith","splitPoint","indexOf","attr","substring","_prop$loc","saveLocale","_child$content","_child$content2","tag","_generateSfc","_x","_x2","_x3","_x4","_x5","isInTemplate","isSetup","babelParser","sourceType","shouldImport","visitor","Program","enter","container","comments","traverse","findParent","isImportDeclaration","node","skipTransform","exit","importAst","ImportDeclaration","body","unshift","StringLiteral","replaceExpression","getReplaceExpression","replaceWith","TemplateLiteral","get","some","raw","babelTraverse","compact","jsescOption","quotes","expressionParams","isTemplateLiteral","expressions","item","cur","index","_expressionParams2","join","_expressionParams","expression","hash","locale","trim","createHash","update","digest","attributes","_attr$loc","isSelfClosing","_callee2","customBlocks","file","parser","prettierConfigpath","options","_context2","styles","_toConsumableArray","block","entries","attrs","attrCode","_ref2","_ref3","_slicedToArray","attrName","attrValue","glob","sync","process","cwd","prettier","semi","singleQuote","__filename","fileURLToPath","import","dirname","pattern","ignore","outputPath","outputFileName","localPackageJson","fse","packageParse","JSON","i18nExtractOptions","assign","Command","option","action","inputOptions","command","_optionValues","opt","argv","files","split","filePath","_res$skip","sourceCode","_res$result","t0","log","stringify"],"sourceRoot":""}